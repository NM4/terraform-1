#cloud-config 
packages:
  # - docker
  # - docker.io  
  # - apt-transport-https
# users:
#   - name: composer
#     uid: 2000
#     groups: docker
#     sudo: ['ALL=(ALL) NOPASSWD:ALL']
#     shell: /bin/bash
# write_files:
#   - path: /home/composer/docker-compose.yml
#     permissions: 0644
#     owner: root
#     content: |
#       version: "3.7"
#       services:
#         rancher-server:
#           image: rancher/rancher
#           ports:
#             - 80:80
#             - 443:443
#           volumes:
#             - /opt/rancher:/var/lib/rancher
#             - /etc/opt/midl/cert:/container/certs
#             - /var/log/rancher/auditlog:/var/log/auditlog
#           restart: always

# runcmd:
#   - curl -L "https://github.com/docker/compose/releases/download/1.25.5/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
#   - chmod +x /usr/local/bin/docker-compose
#   - usermod -a -G docker local
#   - /usr/local/bin/docker-compose -f /home/composer/docker-compose.yml up -d
#   - chown -R composer:docker /home/composer/

write_files:
  - path: /home/ubuntu/rancher-cluster.yml
    owner: ubuntu
    content: |
      nodes:
        - address: ${ip}
          internal_address: ${ip}
          user: ubuntu
          role: [controlplane,etcd,worker]
      addon_job_timeout: 120
  - path: /home/ubuntu/install.sh
    permissions: '0755'
    owner: ubuntu
    content: |
      #!/bin/bash
      rke up --config /home/ubuntu/rancher-cluster.yml
      mkdir -p /home/ubuntu/.kube
      ln -s /home/ubuntu/kube_config_rancher-cluster.yml /home/ubuntu/.kube/config
      kubectl create namespace cert-manager
      kubectl apply --validate=false -f https://raw.githubusercontent.com/jetstack/cert-manager/release-0.12/deploy/manifests/00-crds.yaml
      helm repo add jetstack https://charts.jetstack.io
      helm repo update
      helm install cert-manager --namespace cert-manager --version v0.12.0 jetstack/cert-manager
      kubectl -n cert-manager rollout status deploy/cert-manager
      kubectl -n cert-manager rollout status deploy/cert-manager-webhook
      helm repo add rancher-latest https://releases.rancher.com/server-charts/latest
      helm repo update
      kubectl create namespace cattle-system
      helm install rancher rancher-latest/rancher --namespace cattle-system --set hostname=${hostname}.${domain_name} --set replicas=1
      while true; do curl -kv https://${hostname}.${domain_name} 2>&1 | grep -q "dynamiclistener-ca"; if [ $? != 0 ]; then echo "Rancher isn't ready yet"; sleep 5; continue; fi; break; done; echo "Rancher is Ready";

  

# runcmd:
#   - sudo su -c "ssh-keygen -b 2048 -t rsa -f /home/ubuntu/.ssh/id_rsa -N \"\"" ubuntu
#   - sudo su -c "cat /home/ubuntu/.ssh/id_rsa.pub >> /home/ubuntu/.ssh/authorized_keys" ubuntu
#   - sudo wget -O /usr/local/bin/rke https://github.com/rancher/rke/releases/download/v1.0.2/rke_linux-amd64 && chmod +x /usr/local/bin/rke
#   - curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
#   - echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | tee -a /etc/apt/sources.list.d/kubernetes.list
#   - apt-get update && apt-get install -y kubectl
#   - wget -O /tmp/helm.tar.gz https://get.helm.sh/helm-v3.0.2-linux-amd64.tar.gz 
#   - tar -C /tmp/ -zxf /tmp/helm.tar.gz && mv /tmp/linux-amd64/helm /usr/local/bin/helm && chmod +x /usr/local/bin/helm
#   - rm -rf /tmp/linux-amd64 && rm -f helm.tar.gz
#   - usermod -aG docker ubuntu

